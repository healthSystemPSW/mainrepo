name: Automated deploy to server

on:
  workflow_dispatch:
  push:
    branches: 
      - 'master'
      - 'feature/docker-security'
      - 'feature/publish-docker-img-automation'

env:
  DOCKER_REPO_PATH : 'nikolaaleksic/psw'

jobs:
  dockerize:
    runs-on: ubuntu-latest
    steps:
      - name : Pulling repository to the VM
        uses : actions/checkout@v2
      - name : Docker login
        run: |
          docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Clear docker system
        run: docker system prune -f
      - name : Dockerize gateway
        run: |
          cd Gateway
          docker image build -t ${{env.DOCKER_REPO_PATH}}:gateway .
          docker push ${{env.DOCKER_REPO_PATH}}:gateway
      - name : Dockerize hospital
        run: |
          cd Hospital
          docker image build -t ${{env.DOCKER_REPO_PATH}}:hospital .
          docker push ${{env.DOCKER_REPO_PATH}}:hospital
      - name : Dockerize pharmacy
        run: |
          cd Pharmacy
          docker image build -t ${{env.DOCKER_REPO_PATH}}:pharmacy .
          docker push ${{env.DOCKER_REPO_PATH}}:pharmacy
      - name : Dockerize integration
        run: |
          cd Integration
          docker image build -t ${{env.DOCKER_REPO_PATH}}:integration .
          docker push ${{env.DOCKER_REPO_PATH}}:integration
      - name : Dockerize integration UI
        run: |
          cd WebClients/IntegrationWebClient
          docker image build -t ${{env.DOCKER_REPO_PATH}}:integrationUi .
          docker push ${{env.DOCKER_REPO_PATH}}:integrationUi
      - name : Dockerize patient UI
        run: |
          cd WebClients/PatientWebClient
          docker image build -t ${{env.DOCKER_REPO_PATH}}:patientUi .
          docker push ${{env.DOCKER_REPO_PATH}}:patientUi
      - name : Dockerize manager UI
        run: |
          cd WebClients/ManagerWebClient
          npm update
          npm install
          docker image build -t ${{env.DOCKER_REPO_PATH}}:managerUi .
          docker push ${{env.DOCKER_REPO_PATH}}:managerUi
  deploy:
    runs-on : ubuntu-latest
    needs: ["dockerize"]
    steps:
      - name: multiple command
        uses: appleboy/ssh-action@master
        with:
          command_timeout: 200m
          host: ${{ secrets.SSH_HOST }}
          username: 'student'
          key: ${{ secrets.SSH_KEY }}
          port: 22207
          script: | 
            cd psw
            docker system prune -f
            docker swarm leave --force
            docker swarm init
            echo ${{ secrets.POSTGRES_PASSWORD }} | docker secret create postgres_password -
            curl https://raw.githubusercontent.com/healthSystemPSW/mainrepo/feature/docker-security/Stacks/docker-compose.yml >> docker-compose.yml
            docker stack deploy --compose-file=docker-compose.yml stack

