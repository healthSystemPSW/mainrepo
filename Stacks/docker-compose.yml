version: '3.4'

services:

  gateway:
    build:
      context: ../
      dockerfile: Stacks/Build/Gateway/Dockerfile
      target: gatewayWithFront
      args:
        - HOSPITAL_API_URL=http://127.0.0.1:8080/hospitalapi/
    restart: on-failure
    networks:
      - public
      - application
    ports:
      - 8080:8080
    depends_on:
      - hospitalapi

  hospitalapi:
    networks:
      - application
      - database
    build:
      dockerfile: Stacks/Build/Hospital/Dockerfile
      context: ../
    ports:  
      - "8088:80"
    restart: on-failure
    depends_on:
      - database
    environment:
      HOSPITAL_DB_PATH: "host=database;port=5432;database=HOSPITAL;username=postgres;password=postgres"
    # volumes:
    #   - type: volume
    #     source: web-sql
    #     target: /app/sql
      


  database:
    networks:
      - database
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "HOSPITAL"
    volumes:
      - type: volume
        source: database-data
        target: /var/lib/postgresql/data
      # - type: bind
      #   source: ../Hospital/scripts/init.sql
      #   target: /docker-entrypoint-initdb.d/
      - ../Hospital/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

    ports:
      - 5454:5432

volumes:
  database-data:
  # web-sql:

networks:
  public:
    name: public
    driver: bridge
  application:
    name: application
    driver: bridge
  database:
    name: database
    driver: bridge
