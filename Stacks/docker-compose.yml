version: '3.4'

services:

  # **** FRONTEND SERVICES ****




  # **** API SERVICES ****

  hospitalapi:
    build:
      dockerfile: Stacks/Build/Hospital/Dockerfile
      context: ../
    ports:  
      - "8088:80"
    restart: on-failure
    depends_on:
      - hospitaldb
    environment:
      HOSPITAL_DB_PATH: "host=hospitaldb;port=5432;database=HOSPITAL;username=postgres;password=postgres"

  pharmacyapi:
    build:
      dockerfile: Stacks/Build/Pharmacy/Dockerfile
      context: ../
    ports:  
      - "8089:80"
    restart: on-failure
    depends_on:
      - pharmacydb
    environment:
      PHARMACY_DB_PATH: "host=pharmacydb;port=5432;database=PHARMACY;username=postgres;password=postgres"

  # **** DB SERVICES ****

  hospitaldb:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "HOSPITAL"
    volumes:
      - type: volume
        source: hospitaldb-data
        target: /var/lib/postgresql/data
      - ../Hospital/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5454:5432

  pharmacydb:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "PHARMACY"
    volumes:
      - type: volume
        source: pharmacydb-data
        target: /var/lib/postgresql/data
      - ../Pharmacy/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5455:5432

volumes:
  hospitaldb-data:
  pharmacydb-data:
  # web-sql:
